- alias: 'Menu: Display all available options in telegram'
  hide_entity: true
  initial_state: 'on'
  trigger:
  - platform: event
    event_type: telegram_command
    event_data:
      command: '/o'
  - platform: event
    event_type: telegram_command
    event_data:
      command: '/options'
  action:
    - service: notify.sw132y
      data_template:
        message: 'Wybierz opcję'
        data:
          inline_keyboard:
            - "Temperatura:/report_temperature, Wilgotność:/report_humidity, Grzejniki:/report_radiators"
            - "Okna:/report_upstairs_window"
            - "Brama:/report_gate, Światła:/report_lights, Dzwonek:/report_doorbell"
            - "Otwieranie furtki:/open_gateway"
            - "Zew. ośw. wł:/turn_on_outside_lights, Zew. ośw. wył:/turn_off_outside_lights"
            - "Parter ośw. wł:/turn_on_parter_lights, Parter ośw. wył:/turn_off_parter_lights"

- alias: 'Report: Temperature (sensors)'
  initial_state: 'on'
  trigger:
    platform: event
    event_type: telegram_callback
    event_data:
      data: '/report_temperature'
  action:
    - service: telegram_bot.send_message
      data_template:
        message_id: 'last'
        chat_id: '{{ trigger.event.data.user_id }}'
        message: |
          {% for state in states.sensor -%}
          {% if state.entity_id.startswith('sensor.temp') and state.entity_id.endswith('_temperature') %}
          {{ state.name | replace("Klimat ", "") }} {{ state.state_with_unit }}
          {%- endif %}
          {%- endfor %}

- alias: 'Report: Humidity (sensors)'
  initial_state: 'on'
  trigger:
    platform: event
    event_type: telegram_callback
    event_data:
      data: '/report_humidity'
  action:
    - service: telegram_bot.send_message
      data_template:
        message_id: 'last'
        chat_id: '{{ trigger.event.data.user_id }}'
        message: |
          {% for state in states.sensor -%}
          {% if state.entity_id.startswith('sensor.temp') and state.entity_id.endswith('_humidity') %}
          {{ state.name | replace("Klimat ", "") }} {{ state.state_with_unit }}
          {%- endif %}
          {%- endfor %}

- alias: 'Report: Radiators'
  initial_state: 'on'
  trigger:
    platform: event
    event_type: telegram_callback
    event_data:
      data: '/report_radiators'
  action:
    - service: telegram_bot.send_message
      data_template:
        message_id: 'last'
        chat_id: '{{ trigger.event.data.user_id }}'
        message: |
          {% for state in states.climate -%}
          {% if state.entity_id.startswith('climate.therm') %}
          {{ state.name | replace("Grzejnik ", "") }} {{ state.attributes.current_temperature }}°C ({{state.attributes.current_heating_setpoint}}°C)
          {%- endif %}
          {%- endfor %}

- alias: 'Report: Entry gate state'
  initial_state: 'on'
  trigger:
    platform: event
    event_type: telegram_callback
    event_data:
      data: '/report_gate'
  action:
    - service: telegram_bot.send_message
      data_template:
        message_id: 'last'
        chat_id: '{{ trigger.event.data.user_id }}'
        message: >
            {% if is_state("binary_sensor.kontr202_ogrod_brama_contact", "off") %}Brama jest zamknięta{% else %}Brama jest otwarta{% endif %} od {{ as_timestamp(states.binary_sensor.kontr202_ogrod_brama_contact.last_changed) | timestamp_custom('%b %-d %-I:%M%p') }} 

- alias: 'Report: Upstairs opened windows'
  initial_state: 'on'
  trigger:
    platform: event
    event_type: telegram_callback
    event_data:
      data: '/report_upstairs_window'
  action:
    - service: telegram_bot.send_message
      data_template:
        message_id: 'last'
        chat_id: '{{ trigger.event.data.user_id }}'
        message: |
          {% for state in states.binary_sensor -%}
          {% if state.entity_id.startswith('binary_sensor.kontr') and state.entity_id.endswith('_contact') and state.name.startswith('Okno') %}
          {{state.name | replace("Okno ", "")}} jest {% if is_state(state.entity_id, 'off') %}zamknięte{% else %}otwarte{% endif %}
          {%- endif %}
          {%- endfor %}

- alias: 'Report: Door bell state'
  initial_state: 'on'
  trigger:
    platform: event
    event_type: telegram_callback
    event_data:
      data: '/report_doorbell'
  action:
    - service: telegram_bot.send_message
      data_template:
        message_id: 'last'
        chat_id: '{{ trigger.event.data.user_id }}'
        message: Dzwonek jest {% if is_state('switch.relay005_parter_wejscie_dzwonek', 'off') %}wyłączony{% else %}włączony{% endif %}

- alias: 'Report: Lights state'
  initial_state: 'on'
  trigger:
    platform: event
    event_type: telegram_callback
    event_data:
      data: '/report_lights'
  action:
    - service: telegram_bot.send_message
      data_template:
        message_id: 'last'
        chat_id: '{{ trigger.event.data.user_id }}'
        message: |
          Witryna: {{states.switch.relay006_parter_salon_witryna.state}}
          Narożnik {{states.switch.relay007_parter_salon_naroznik.state}}
          Kuchnia: {{states.switch.relay009_parter_kuchnia_potrojna.state}}
          Jeleń: {{states.switch.relay102_grzejnik.state}}
          Zewnętrzne: {{states.switch.relay002_parter_wejscie_oswietle.state}}

- alias: 'Action: open gateway'
  initial_state: 'on'
  trigger:
    platform: event
    event_type: telegram_callback
    event_data:
      data: '/open_gateway'
  action:
    - service: switch.turn_on
      entity_id: switch.relay001_parter_wejscie_furtka

- alias: 'Action: turn on outside lights'
  initial_state: 'on'
  trigger:
    platform: event
    event_type: telegram_callback
    event_data:
      data: '/turn_on_outside_lights'
  action:
    - service: switch.turn_on
      entity_id: switch.relay002_parter_wejscie_oswietle

- alias: 'Action: turn off outside lights'
  initial_state: 'on'
  trigger:
    platform: event
    event_type: telegram_callback
    event_data:
      data: '/turn_off_outside_lights'
  action:
    - service: switch.turn_off
      entity_id: switch.relay002_parter_wejscie_oswietle

- alias: 'Action: turn on parter lights'
  initial_state: 'on'
  trigger:
    platform: event
    event_type: telegram_callback
    event_data:
      data: '/turn_on_parter_lights'
  action:
    - service: switch.turn_on
      entity_id: group.lights_parter

- alias: 'Action: turn off parter lights'
  initial_state: 'on'
  trigger:
    platform: event
    event_type: telegram_callback
    event_data:
      data: '/turn_off_parter_lights'
  action:
    - service: switch.turn_off
      entity_id: group.lights_parter