- alias: Set theme at startup
  trigger:
    platform: homeassistant
    event: start
  action:
    service: frontend.set_theme
    data:
      name: Dark

- id: 'telegram_piboot'
  alias: 'Telegram o uruchomieniu hassio'
  trigger:
  - event: start
    platform: homeassistant
  condition: []
  action:
  - service: notify.send
    data:
      message: Home Assistant on Pi booted

#
# Klimat w domu
#

- id: 'telegram_temperature_inside_below_limit'
  alias: 'Telegram o temperaturze poniżej 20 stopni'
  trigger:
    - platform: time_pattern
      minutes: "/30"
  condition:
    condition: and
    conditions:
      - condition: numeric_state
        entity_id: sensor.temp101_pietro_sypialnia_temperature
        below: 20
      - condition: time
        after: '18:00:00'
        before: '07:00:00'
  action:
  - service: notify.send
    data:
      message: Temperatura w sypialni wynosi {{states.sensor.temp101_pietro_sypialnia_temperature.state_with_unit}}

#
# Okna u góry
# 

- id: 'telegram_window'
  alias: 'Telegram o otwartym oknie'
  initial_state: 'on'
  trigger:
    - platform: time_pattern
      minutes: "/30"
  condition:
    condition: and
    conditions:
        - condition: template
          value_template: "{{ ( states.sensor.temp201_ogrod_ganek_temperature.state  ) < ( states.sensor.temp005_parter_biuro_temperature.state ) }}"
        - condition: state
          entity_id: group.upstairs_windows
          state: 'on'
  action:
  - service: notify.send
    data:
      message: Okno na piętrze jest otwarte

#
# Brama wjazdowa
#      

- id: telegram_brama_otwarta_przez_dluzszy_czas
  initial_state: 'on'
  alias: Telegram o otwartej bramie
  trigger:
    - platform: time_pattern
      seconds: "/60"
  condition:
    condition: and
    conditions:
      - condition: state
        entity_id: binary_sensor.kontr202_ogrod_brama_contact
        state: 'on'
      - condition: template
        value_template: '{{as_timestamp(now()) - as_timestamp(states.binary_sensor.kontr202_ogrod_brama_contact.last_changed) >= 300}}'
  action:
  - service: notify.send
    data:
      message: 'Brama jest otwarta od {{((as_timestamp(now()) - as_timestamp(states.binary_sensor.kontr202_ogrod_brama_contact.last_changed)) / 60) | int}}min'

- id: telegram_brama_otwarcie
  initial_state: 'on'
  alias: Telegram o otwarciu bramy
  trigger:
    platform: state
    entity_id: binary_sensor.kontr202_ogrod_brama_contact
    from: 'off'
    to: 'on'
    for:
      seconds: 10
  action:
  - service: notify.send
    data:
      message: Brama została otwarta

- id: telegram_brama_zamkniecie
  initial_state: 'on'
  alias: Telegram o zamknięciu bramy
  trigger:
    platform: state
    entity_id: binary_sensor.kontr202_ogrod_brama_contact
    from: 'on'
    to: 'off'
    for:
      seconds: 10
  action:
  - service: notify.send
    data:
      message: Brama została zamknięta
#
# Backup
#

- alias: 'Create Snapshot'
  initial_state: 'on'
  trigger:
    platform: time
    at: '02:00:00'
  condition:  
    condition: time
    weekday:
      - sun
      - wed
  action:
    - service: hassio.snapshot_full
      data_template:
        name: Hassio ({{now().strftime('%d.%m.%y')}})
    - service: notify.send
      data_template:
        message: Hassio snapshot {{now().strftime('%d.%m.%y')}} is done.

- id: 'backup_to_git'
  initial_state: 'on'
  alias: 'Automatyczne wysłanie kopii zapasowej do GITa'
  trigger:
    platform: time
    at: '22:03:00'
  action:
    - service: shell_command.backup