- alias: Set theme at startup
  trigger:
    platform: homeassistant
    event: start
  action:
    service: frontend.set_theme
    data:
      name: Dark

- id: 'telegram_piboot'
  alias: 'Telegram o uruchomieniu hassio'
  trigger:
  - event: start
    platform: homeassistant
  condition: []
  action:
  - service: notify.sw132y
    data:
      message: Home Assistant on Pi booted

#
# Klimat w domu
#

- id: 'telegram_temperature_inside_below_limit'
  alias: 'Telegram o temperaturze poniżej 20 stopni'
  trigger:
    - platform: time_pattern
      minutes: "/30"
  condition:
    condition: and
    conditions:
      - condition: numeric_state
        entity_id: sensor.temp101_pietro_sypialnia_temperature
        below: 20
      - condition: time
        after: '18:00:00'
        before: '07:00:00'
  action:
  - service: notify.sw132y
    data:
      message: Temperatura w sypialni wynosi {{states.sensor.temp101_pietro_sypialnia_temperature.state_with_unit}}

#
# Okna u góry
# 

- id: 'telegram_window'
  alias: 'Telegram o otwartym oknie'
  initial_state: 'on'
  trigger:
    - platform: time_pattern
      minutes: "/30"
  condition:
    condition: and
    conditions:
        - condition: template
          value_template: "{{ ( states.sensor.temp201_ogrod_ganek_temperature.state  ) < ( states.sensor.temp005_parter_biuro_temperature.state ) }}"
        - condition: state
          entity_id: group.upstairs_windows
          state: 'on'
  action:
  - service: notify.sw132y
    data:
      message: Okno na piętrze jest otwarte

#
# Brama wjazdowa
#      

- id: telegram_brama_otwarta_przez_dluzszy_czas
  initial_state: 'on'
  alias: Telegram o otwartej bramie
  trigger:
    - platform: time_pattern
      seconds: "/60"
  condition:
    condition: and
    conditions:
      - condition: state
        entity_id: binary_sensor.kontr202_ogrod_brama_contact
        state: 'on'
      - condition: template
        value_template: '{{as_timestamp(now()) - as_timestamp(states.binary_sensor.kontr202_ogrod_brama_contact.last_changed) >= 300}}'
  action:
  - service: notify.sw132y
    data:
      message: 'Brama jest otwarta od {{((as_timestamp(now()) - as_timestamp(states.binary_sensor.kontr202_ogrod_brama_contact.last_changed)) / 60) | int}}min'

- id: telegram_brama_otwarcie
  initial_state: 'on'
  alias: Telegram o otwarciu bramy
  trigger:
    platform: state
    entity_id: binary_sensor.kontr202_ogrod_brama_contact
    from: 'off'
    to: 'on'
    for:
      seconds: 10
  action:
  - service: notify.sw132y
    data:
      message: Brama została otwarta

- id: telegram_brama_zamkniecie
  initial_state: 'on'
  alias: Telegram o zamknięciu bramy
  trigger:
    platform: state
    entity_id: binary_sensor.kontr202_ogrod_brama_contact
    from: 'on'
    to: 'off'
    for:
      seconds: 10
  action:
  - service: notify.sw132y
    data:
      message: Brama została zamknięta
#
# Backup
#

- alias: 'Create Snapshot'
  initial_state: 'on'
  trigger:
    platform: time
    at: '02:00:00'
  condition:  
    condition: time
    weekday:
      - sun
      - wed
  action:
    - service: hassio.snapshot_full
      data_template:
        name: Hassio ({{now().strftime('%d.%m.%y')}})
    - service: notify.sw132y
      data_template:
        message: Hassio snapshot {{now().strftime('%d.%m.%y')}} is done.

- id: 'backup_to_git'
  initial_state: 'on'
  alias: 'Automatyczne wysłanie kopii zapasowej do GITa'
  trigger:
    platform: time
    at: '22:03:00'
  action:
    - service: shell_command.backup

#
# Rely
# 

- id: telegram_radiator_state_changed
  initial_state: 'on'
  alias: Telegram o włączeniu przekaźnika
  trigger:
    - platform: state
      entity_id: switch.relay102_grzejnik
      from: 'on'
      to: 'off'
    - platform: state
      entity_id: switch.relay102_grzejnik
      from: 'off'
      to: 'on'
  action:
  - service: notify.sw132y
    data:
       message: Grzejnik jest "{{states.switch.relay102_grzejnik.state}}"

#
# Raports
#

- id: show_available_options_in_telegram
  alias: 'Shows all available options in telegram'
  hide_entity: true
  initial_state: 'on'
  trigger:
    platform: event
    event_type: telegram_command
    event_data:
      command: '/o'
  action:
    - service: notify.sw132y
      data:
        message: "Wybierz:"
        data:
          inline_keyboard:
            - "Raporty:/r"
            - "Chillout room:/ch"

- id: all_reports
  alias: 'Shows all available reports in telegram'
  hide_entity: true
  initial_state: 'on'
  trigger:
    platform: event
    event_type: telegram_callback
    event_data:
      command: '/r'
  action:
    - service: notify.sw132y
      data:
        message: "Wybierz:"
        data:
          inline_keyboard:
            - "Klimat:/report_temperature, Okna:/report_upstairs_window"
            - "Brama:/report_gate, Światła:/report_lights, Dzwonek:/report_doorbell"

- id: chillout_room_lights
  alias: 'Shows all available lights mode in chillout room'
  hide_entity: true
  initial_state: 'on'
  trigger:
    platform: event
    event_type: telegram_callback
    event_data:
      command: '/ch'
  action:
    - service: notify.sw132y
      data:
        message: "Wybierz:"
        data:
          inline_keyboard:
            - "Film:/chillout_room_mode_movie,Dzień:/chillout_room_mode_normal,Full:/chillout_room_mode_full"

- id: report_temperature
  alias: 'Temperature and humidity'
  initial_state: 'on'
  trigger:
    platform: event
    event_type: telegram_callback
    event_data:
      data: '/report_temperature'
  action:
    - service: notify.sw132y
      data:
        title: '*Temperatura i wilgotność*'
        message: |
          Sypialnia {{ states.sensor.temp101_pietro_sypialnia_temperature.state_with_unit }}, {{ states.sensor.temp101_pietro_sypialnia_humidity.state_with_unit }}
          Salon {{ states.sensor.temp008_parter_salon_temperature.state_with_unit }}, {{ states.sensor.temp008_parter_salon_humidity.state_with_unit }}
          Biuro {{ states.sensor.temp005_parter_biuro_temperature.state_with_unit }}, {{ states.sensor.temp005_parter_biuro_humidity.state_with_unit }}
          Ogród {{ states.sensor.temp201_ogrod_ganek_temperature.state_with_unit }}, {{ states.sensor.temp201_ogrod_ganek_humidity.state_with_unit }}

- id: report_gate
  alias: 'Entry gate state'
  initial_state: 'on'
  trigger:
    platform: event
    event_type: telegram_callback
    event_data:
      data: '/report_gate'
  action:
    - service: notify.sw132y
      data:
        title: '*Brama wjazdowa*'
        message: Brama jest {{states.binary_sensor.kontr202_ogrod_brama_contact.state}} od {{((as_timestamp(now()) - as_timestamp(states.binary_sensor.kontr202_ogrod_brama_contact.last_changed)) / 60) | int}}min

- id: report_upstairs_window
  alias: 'Upstairs window'
  initial_state: 'on'
  trigger:
    platform: event
    event_type: telegram_callback
    event_data:
      data: '/report_upstairs_window'
  action:
    - service: notify.sw132y
      data:
        title: '*Okna u góry*'
        message: |
          Sypialnia Pd {{states.binary_sensor.kontr102_pietro_sypialnia_poludnie_contact.state}}
          Sypialnia Wsch {{states.binary_sensor.kontr101_pietro_sypialnia_wschod_contact.state}}
          Chillroom {{states.binary_sensor.kontr103_pietro_chillroom_contact.state}}
          Gościnny {{states.binary_sensor.kontr104_pietro_goscinny_contact.state}}
          Łazienka {{states.binary_sensor.kontr106_pietro_lazienka_contact.state}}
          Ignacy {{states.binary_sensor.kontr105_pietro_ignacy_contact.state}}

- id: report_doorbell
  alias: 'Doorbell state'
  initial_state: 'on'
  trigger:
    platform: event
    event_type: telegram_callback
    event_data:
      data: '/report_doorbell'
  action:
    - service: notify.sw132y
      data:
        title: '*Dzwonek*'
        message: Dzwonek jest {{states.switch.relay005_parter_wejscie_dzwonek.state}}

- id: report_lights
  alias: 'Lights state'
  initial_state: 'on'
  trigger:
    platform: event
    event_type: telegram_callback
    event_data:
      data: '/report_lights'
  action:
    - service: notify.sw132y
      data:
        title: '*Światła*'
        message: Witryna jest {{states.switch.relay006_parter_salon_witryna.state}}
#
# Lights
#

- id: chillout_room_mode_movie
  alias: Chillout room - Movie mode
  trigger:
    platform: event
    event_type: telegram_callback
    event_data:
      data: '/chillout_room_mode_movie'
  action:
    - service: light.turn_on
      data:
        entity_id: light.chillroom_lights
        brightness: 50

- id: chillout_room_mode_normal
  alias: Chillout room - Normal mode
  trigger:
    platform: event
    event_type: telegram_callback
    event_data:
      data: '/chillout_room_mode_normal'
  action:
    - service: light.turn_on
      data:
        entity_id: light.chillroom_lights
        brightness: 125
        
- id: chillout_room_mode_full
  alias: Chillout room - Full mode
  trigger:
    platform: event
    event_type: telegram_callback
    event_data:
      data: '/chillout_room_mode_full'
  action:
    - service: light.turn_on
      data:
        entity_id: light.chillroom_lights
        brightness: 255